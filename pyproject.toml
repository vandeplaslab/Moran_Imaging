[build-system]
requires = [
  "setuptools >= 42",
  "wheel",
  "build",
  "setuptools_scm[toml]>=3.4"
]
build-backend = "setuptools.build_meta"

# https://peps.python.org/pep-0621/
[project]
name = "Moran_Imaging"
description = "Spatial analysis of molecular imaging data: spatial dependence and heterogeneity statistics, spatial segmentation, spatial clustering."
readme = "README.md"
requires-python = ">=3.8"
license = { text = "BSD 3-Clause License" }
authors = [
    { email = "leonoortideman@gmail.com", name = "Leonore Tideman" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "joblib>=1.3.0",
    "matplotlib>=3.6.0",
    "numba>=0.55.0",
    "numpy>=1.22.0",
    "pandas>=2.0.0",
    "tqdm>=4.60.0",
    "seaborn",
    "h5py",
    "scikit-image>=0.20.0",
    "scikit-learn>=1.2.0",
    "scipy>=1.10.0",
    "torch>=2.3.0",
    "kornia",
    "torchvision",
    "byol-pytorch", 
    "umap-learn>=0.5.0",
]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
demo = [
    "jupyterlab"
]
test = [
    "pytest>=6.0",
    "pytest-cov"
]
dev = [
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "rich",
    "ruff",
    "Moran_Imaging[demo,test]",
]

[project.urls]
homepage = "https://github.com/vandeplaslab/Moran_Imaging"
repository = "https://github.com/vandeplaslab/Moran_Imaging"

# same as console_scripts entry point
# [project.scripts]
# spam-cli = "spam:main_cli"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# [project.entry-points."spam.magical"]
# tomatoes = "spam:main_tomatoes"

[tool.setuptools_scm]
write_to = "src/moran_imaging/_version.py"


# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 120
target-version = "py38"
src = ["src"]
# https://beta.ruff.rs/docs/rules/

[tool.ruff.lint]
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "I",    # isort
    "UP",    # pyupgrade
    "C4",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "T20", # flake8-print
    "TID",  # flake8-tidy-imports # replace absolutify import
    "COM", # flake8-commas
    "SIM", # flake8-simplify
    "BLE", # flake8-blind-exception
    "TCH", # flake8-type-checing
]
# I do this to get numpy-style docstrings AND retain
# D417 (Missing argument descriptions in the docstring)
# otherwise, see:
# https://beta.ruff.rs/docs/faq/#does-ruff-support-numpy-or-google-style-docstrings
# https://github.com/charliermarsh/ruff/issues/2606
ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D401", # First line should be in imperative mood
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
    "COM812", # flake8-commas - we don't like adding comma on single line of arguments
    "SIM117", # flake8-simplify - we some of merged with statements are not looking great with black, reanble after drop python 3.9
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = false
disable_error_code = [
    "import-untyped"
]

# # module specific overrides
# [[tool.mypy.overrides]]
# module = ["numpy.*",]
# ignore_errors = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
]

[tool.coverage.run]
source = ["moran_imaging"]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
    ".idea/**/*",
    "_version.py",
    ".cruft.json",
    "tutorials/*.ipynb",
    "venv/**/*",
]
